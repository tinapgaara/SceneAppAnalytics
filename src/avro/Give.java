/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Give extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Give\",\"namespace\":\"avro\",\"fields\":[{\"name\":\"userId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"userName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userPhotoUrl\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"merchantId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"timestamp\",\"type\":\"string\",\"default\":\"0\"},{\"name\":\"userLat\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"userLng\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"attrName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"attrValue\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"targetMerchantID\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"targetMerchantName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"askId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"askingUserName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"endorsements\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"giveId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"giveText\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"multimedia\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"MultimediaType\",\"fields\":[{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"url\",\"type\":[\"null\",\"string\"],\"default\":null}]},\"default\":[]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public Integer userId;
  @Deprecated public CharSequence userName;
  @Deprecated public CharSequence userPhotoUrl;
  @Deprecated public Long merchantId;
  @Deprecated public CharSequence timestamp;
  @Deprecated public Double userLat;
  @Deprecated public Double userLng;
  @Deprecated public CharSequence type;
  @Deprecated public CharSequence attrName;
  @Deprecated public CharSequence attrValue;
  @Deprecated public Long targetMerchantID;
  @Deprecated public CharSequence targetMerchantName;
  @Deprecated public CharSequence askId;
  @Deprecated public CharSequence askingUserName;
  @Deprecated public Long endorsements;
  @Deprecated public CharSequence giveId;
  @Deprecated public CharSequence giveText;
  @Deprecated public java.util.List<MultimediaType> multimedia;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Give() {}

  /**
   * All-args constructor.
   */
  public Give(Integer userId, CharSequence userName, CharSequence userPhotoUrl, Long merchantId, CharSequence timestamp, Double userLat, Double userLng, CharSequence type, CharSequence attrName, CharSequence attrValue, Long targetMerchantID, CharSequence targetMerchantName, CharSequence askId, CharSequence askingUserName, Long endorsements, CharSequence giveId, CharSequence giveText, java.util.List<MultimediaType> multimedia) {
    this.userId = userId;
    this.userName = userName;
    this.userPhotoUrl = userPhotoUrl;
    this.merchantId = merchantId;
    this.timestamp = timestamp;
    this.userLat = userLat;
    this.userLng = userLng;
    this.type = type;
    this.attrName = attrName;
    this.attrValue = attrValue;
    this.targetMerchantID = targetMerchantID;
    this.targetMerchantName = targetMerchantName;
    this.askId = askId;
    this.askingUserName = askingUserName;
    this.endorsements = endorsements;
    this.giveId = giveId;
    this.giveText = giveText;
    this.multimedia = multimedia;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
      case 0: return userId;
      case 1: return userName;
      case 2: return userPhotoUrl;
      case 3: return merchantId;
      case 4: return timestamp;
      case 5: return userLat;
      case 6: return userLng;
      case 7: return type;
      case 8: return attrName;
      case 9: return attrValue;
      case 10: return targetMerchantID;
      case 11: return targetMerchantName;
      case 12: return askId;
      case 13: return askingUserName;
      case 14: return endorsements;
      case 15: return giveId;
      case 16: return giveText;
      case 17: return multimedia;
      default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
      case 0: userId = (Integer)value$; break;
      case 1: userName = (CharSequence)value$; break;
      case 2: userPhotoUrl = (CharSequence)value$; break;
      case 3: merchantId = (Long)value$; break;
      case 4: timestamp = (CharSequence)value$; break;
      case 5: userLat = (Double)value$; break;
      case 6: userLng = (Double)value$; break;
      case 7: type = (CharSequence)value$; break;
      case 8: attrName = (CharSequence)value$; break;
      case 9: attrValue = (CharSequence)value$; break;
      case 10: targetMerchantID = (Long)value$; break;
      case 11: targetMerchantName = (CharSequence)value$; break;
      case 12: askId = (CharSequence)value$; break;
      case 13: askingUserName = (CharSequence)value$; break;
      case 14: endorsements = (Long)value$; break;
      case 15: giveId = (CharSequence)value$; break;
      case 16: giveText = (CharSequence)value$; break;
      case 17: multimedia = (java.util.List<MultimediaType>)value$; break;
      default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'userId' field.
   */
  public Integer getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(Integer value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'userName' field.
   */
  public CharSequence getUserName() {
    return userName;
  }

  /**
   * Sets the value of the 'userName' field.
   * @param value the value to set.
   */
  public void setUserName(CharSequence value) {
    this.userName = value;
  }

  /**
   * Gets the value of the 'userPhotoUrl' field.
   */
  public CharSequence getUserPhotoUrl() {
    return userPhotoUrl;
  }

  /**
   * Sets the value of the 'userPhotoUrl' field.
   * @param value the value to set.
   */
  public void setUserPhotoUrl(CharSequence value) {
    this.userPhotoUrl = value;
  }

  /**
   * Gets the value of the 'merchantId' field.
   */
  public Long getMerchantId() {
    return merchantId;
  }

  /**
   * Sets the value of the 'merchantId' field.
   * @param value the value to set.
   */
  public void setMerchantId(Long value) {
    this.merchantId = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public CharSequence getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(CharSequence value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'userLat' field.
   */
  public Double getUserLat() {
    return userLat;
  }

  /**
   * Sets the value of the 'userLat' field.
   * @param value the value to set.
   */
  public void setUserLat(Double value) {
    this.userLat = value;
  }

  /**
   * Gets the value of the 'userLng' field.
   */
  public Double getUserLng() {
    return userLng;
  }

  /**
   * Sets the value of the 'userLng' field.
   * @param value the value to set.
   */
  public void setUserLng(Double value) {
    this.userLng = value;
  }

  /**
   * Gets the value of the 'type' field.
   */
  public CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'attrName' field.
   */
  public CharSequence getAttrName() {
    return attrName;
  }

  /**
   * Sets the value of the 'attrName' field.
   * @param value the value to set.
   */
  public void setAttrName(CharSequence value) {
    this.attrName = value;
  }

  /**
   * Gets the value of the 'attrValue' field.
   */
  public CharSequence getAttrValue() {
    return attrValue;
  }

  /**
   * Sets the value of the 'attrValue' field.
   * @param value the value to set.
   */
  public void setAttrValue(CharSequence value) {
    this.attrValue = value;
  }

  /**
   * Gets the value of the 'targetMerchantID' field.
   */
  public Long getTargetMerchantID() {
    return targetMerchantID;
  }

  /**
   * Sets the value of the 'targetMerchantID' field.
   * @param value the value to set.
   */
  public void setTargetMerchantID(Long value) {
    this.targetMerchantID = value;
  }

  /**
   * Gets the value of the 'targetMerchantName' field.
   */
  public CharSequence getTargetMerchantName() {
    return targetMerchantName;
  }

  /**
   * Sets the value of the 'targetMerchantName' field.
   * @param value the value to set.
   */
  public void setTargetMerchantName(CharSequence value) {
    this.targetMerchantName = value;
  }

  /**
   * Gets the value of the 'askId' field.
   */
  public CharSequence getAskId() {
    return askId;
  }

  /**
   * Sets the value of the 'askId' field.
   * @param value the value to set.
   */
  public void setAskId(CharSequence value) {
    this.askId = value;
  }

  /**
   * Gets the value of the 'askingUserName' field.
   */
  public CharSequence getAskingUserName() {
    return askingUserName;
  }

  /**
   * Sets the value of the 'askingUserName' field.
   * @param value the value to set.
   */
  public void setAskingUserName(CharSequence value) {
    this.askingUserName = value;
  }

  /**
   * Gets the value of the 'endorsements' field.
   */
  public Long getEndorsements() {
    return endorsements;
  }

  /**
   * Sets the value of the 'endorsements' field.
   * @param value the value to set.
   */
  public void setEndorsements(Long value) {
    this.endorsements = value;
  }

  /**
   * Gets the value of the 'giveId' field.
   */
  public CharSequence getGiveId() {
    return giveId;
  }

  /**
   * Sets the value of the 'giveId' field.
   * @param value the value to set.
   */
  public void setGiveId(CharSequence value) {
    this.giveId = value;
  }

  /**
   * Gets the value of the 'giveText' field.
   */
  public CharSequence getGiveText() {
    return giveText;
  }

  /**
   * Sets the value of the 'giveText' field.
   * @param value the value to set.
   */
  public void setGiveText(CharSequence value) {
    this.giveText = value;
  }

  /**
   * Gets the value of the 'multimedia' field.
   */
  public java.util.List<MultimediaType> getMultimedia() {
    return multimedia;
  }

  /**
   * Sets the value of the 'multimedia' field.
   * @param value the value to set.
   */
  public void setMultimedia(java.util.List<MultimediaType> value) {
    this.multimedia = value;
  }

  /** Creates a new Give RecordBuilder */
  public static Builder newBuilder() {
    return new Builder();
  }

  /** Creates a new Give RecordBuilder by copying an existing Builder */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /** Creates a new Give RecordBuilder by copying an existing Give instance */
  public static Builder newBuilder(Give other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for Give instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Give>
          implements org.apache.avro.data.RecordBuilder<Give> {

    private Integer userId;
    private CharSequence userName;
    private CharSequence userPhotoUrl;
    private Long merchantId;
    private CharSequence timestamp;
    private Double userLat;
    private Double userLng;
    private CharSequence type;
    private CharSequence attrName;
    private CharSequence attrValue;
    private Long targetMerchantID;
    private CharSequence targetMerchantName;
    private CharSequence askId;
    private CharSequence askingUserName;
    private Long endorsements;
    private CharSequence giveId;
    private CharSequence giveText;
    private java.util.List<MultimediaType> multimedia;

    /** Creates a new Builder */
    private Builder() {
      super(Give.SCHEMA$);
    }

    /** Creates a Builder by copying an existing Builder */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userName)) {
        this.userName = data().deepCopy(fields()[1].schema(), other.userName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userPhotoUrl)) {
        this.userPhotoUrl = data().deepCopy(fields()[2].schema(), other.userPhotoUrl);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.merchantId)) {
        this.merchantId = data().deepCopy(fields()[3].schema(), other.merchantId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[4].schema(), other.timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.userLat)) {
        this.userLat = data().deepCopy(fields()[5].schema(), other.userLat);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.userLng)) {
        this.userLng = data().deepCopy(fields()[6].schema(), other.userLng);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.type)) {
        this.type = data().deepCopy(fields()[7].schema(), other.type);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.attrName)) {
        this.attrName = data().deepCopy(fields()[8].schema(), other.attrName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.attrValue)) {
        this.attrValue = data().deepCopy(fields()[9].schema(), other.attrValue);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.targetMerchantID)) {
        this.targetMerchantID = data().deepCopy(fields()[10].schema(), other.targetMerchantID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.targetMerchantName)) {
        this.targetMerchantName = data().deepCopy(fields()[11].schema(), other.targetMerchantName);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.askId)) {
        this.askId = data().deepCopy(fields()[12].schema(), other.askId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.askingUserName)) {
        this.askingUserName = data().deepCopy(fields()[13].schema(), other.askingUserName);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.endorsements)) {
        this.endorsements = data().deepCopy(fields()[14].schema(), other.endorsements);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.giveId)) {
        this.giveId = data().deepCopy(fields()[15].schema(), other.giveId);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.giveText)) {
        this.giveText = data().deepCopy(fields()[16].schema(), other.giveText);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.multimedia)) {
        this.multimedia = data().deepCopy(fields()[17].schema(), other.multimedia);
        fieldSetFlags()[17] = true;
      }
    }

    /** Creates a Builder by copying an existing Give instance */
    private Builder(Give other) {
      super(Give.SCHEMA$);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userName)) {
        this.userName = data().deepCopy(fields()[1].schema(), other.userName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userPhotoUrl)) {
        this.userPhotoUrl = data().deepCopy(fields()[2].schema(), other.userPhotoUrl);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.merchantId)) {
        this.merchantId = data().deepCopy(fields()[3].schema(), other.merchantId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[4].schema(), other.timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.userLat)) {
        this.userLat = data().deepCopy(fields()[5].schema(), other.userLat);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.userLng)) {
        this.userLng = data().deepCopy(fields()[6].schema(), other.userLng);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.type)) {
        this.type = data().deepCopy(fields()[7].schema(), other.type);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.attrName)) {
        this.attrName = data().deepCopy(fields()[8].schema(), other.attrName);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.attrValue)) {
        this.attrValue = data().deepCopy(fields()[9].schema(), other.attrValue);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.targetMerchantID)) {
        this.targetMerchantID = data().deepCopy(fields()[10].schema(), other.targetMerchantID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.targetMerchantName)) {
        this.targetMerchantName = data().deepCopy(fields()[11].schema(), other.targetMerchantName);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.askId)) {
        this.askId = data().deepCopy(fields()[12].schema(), other.askId);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.askingUserName)) {
        this.askingUserName = data().deepCopy(fields()[13].schema(), other.askingUserName);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.endorsements)) {
        this.endorsements = data().deepCopy(fields()[14].schema(), other.endorsements);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.giveId)) {
        this.giveId = data().deepCopy(fields()[15].schema(), other.giveId);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.giveText)) {
        this.giveText = data().deepCopy(fields()[16].schema(), other.giveText);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.multimedia)) {
        this.multimedia = data().deepCopy(fields()[17].schema(), other.multimedia);
        fieldSetFlags()[17] = true;
      }
    }

    /** Gets the value of the 'userId' field */
    public Integer getUserId() {
      return userId;
    }

    /** Sets the value of the 'userId' field */
    public Builder setUserId(Integer value) {
      validate(fields()[0], value);
      this.userId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /** Checks whether the 'userId' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[0];
    }

    /** Clears the value of the 'userId' field */
    public Builder clearUserId() {
      userId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'userName' field */
    public CharSequence getUserName() {
      return userName;
    }

    /** Sets the value of the 'userName' field */
    public Builder setUserName(CharSequence value) {
      validate(fields()[1], value);
      this.userName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /** Checks whether the 'userName' field has been set */
    public boolean hasUserName() {
      return fieldSetFlags()[1];
    }

    /** Clears the value of the 'userName' field */
    public Builder clearUserName() {
      userName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'userPhotoUrl' field */
    public CharSequence getUserPhotoUrl() {
      return userPhotoUrl;
    }

    /** Sets the value of the 'userPhotoUrl' field */
    public Builder setUserPhotoUrl(CharSequence value) {
      validate(fields()[2], value);
      this.userPhotoUrl = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /** Checks whether the 'userPhotoUrl' field has been set */
    public boolean hasUserPhotoUrl() {
      return fieldSetFlags()[2];
    }

    /** Clears the value of the 'userPhotoUrl' field */
    public Builder clearUserPhotoUrl() {
      userPhotoUrl = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'merchantId' field */
    public Long getMerchantId() {
      return merchantId;
    }

    /** Sets the value of the 'merchantId' field */
    public Builder setMerchantId(Long value) {
      validate(fields()[3], value);
      this.merchantId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /** Checks whether the 'merchantId' field has been set */
    public boolean hasMerchantId() {
      return fieldSetFlags()[3];
    }

    /** Clears the value of the 'merchantId' field */
    public Builder clearMerchantId() {
      merchantId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public CharSequence getTimestamp() {
      return timestamp;
    }

    /** Sets the value of the 'timestamp' field */
    public Builder setTimestamp(CharSequence value) {
      validate(fields()[4], value);
      this.timestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[4];
    }

    /** Clears the value of the 'timestamp' field */
    public Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'userLat' field */
    public Double getUserLat() {
      return userLat;
    }

    /** Sets the value of the 'userLat' field */
    public Builder setUserLat(Double value) {
      validate(fields()[5], value);
      this.userLat = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /** Checks whether the 'userLat' field has been set */
    public boolean hasUserLat() {
      return fieldSetFlags()[5];
    }

    /** Clears the value of the 'userLat' field */
    public Builder clearUserLat() {
      userLat = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'userLng' field */
    public Double getUserLng() {
      return userLng;
    }

    /** Sets the value of the 'userLng' field */
    public Builder setUserLng(Double value) {
      validate(fields()[6], value);
      this.userLng = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /** Checks whether the 'userLng' field has been set */
    public boolean hasUserLng() {
      return fieldSetFlags()[6];
    }

    /** Clears the value of the 'userLng' field */
    public Builder clearUserLng() {
      userLng = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public CharSequence getType() {
      return type;
    }

    /** Sets the value of the 'type' field */
    public Builder setType(CharSequence value) {
      validate(fields()[7], value);
      this.type = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[7];
    }

    /** Clears the value of the 'type' field */
    public Builder clearType() {
      type = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'attrName' field */
    public CharSequence getAttrName() {
      return attrName;
    }

    /** Sets the value of the 'attrName' field */
    public Builder setAttrName(CharSequence value) {
      validate(fields()[8], value);
      this.attrName = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /** Checks whether the 'attrName' field has been set */
    public boolean hasAttrName() {
      return fieldSetFlags()[8];
    }

    /** Clears the value of the 'attrName' field */
    public Builder clearAttrName() {
      attrName = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'attrValue' field */
    public CharSequence getAttrValue() {
      return attrValue;
    }

    /** Sets the value of the 'attrValue' field */
    public Builder setAttrValue(CharSequence value) {
      validate(fields()[9], value);
      this.attrValue = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /** Checks whether the 'attrValue' field has been set */
    public boolean hasAttrValue() {
      return fieldSetFlags()[9];
    }

    /** Clears the value of the 'attrValue' field */
    public Builder clearAttrValue() {
      attrValue = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'targetMerchantID' field */
    public Long getTargetMerchantID() {
      return targetMerchantID;
    }

    /** Sets the value of the 'targetMerchantID' field */
    public Builder setTargetMerchantID(Long value) {
      validate(fields()[10], value);
      this.targetMerchantID = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /** Checks whether the 'targetMerchantID' field has been set */
    public boolean hasTargetMerchantID() {
      return fieldSetFlags()[10];
    }

    /** Clears the value of the 'targetMerchantID' field */
    public Builder clearTargetMerchantID() {
      targetMerchantID = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'targetMerchantName' field */
    public CharSequence getTargetMerchantName() {
      return targetMerchantName;
    }

    /** Sets the value of the 'targetMerchantName' field */
    public Builder setTargetMerchantName(CharSequence value) {
      validate(fields()[11], value);
      this.targetMerchantName = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /** Checks whether the 'targetMerchantName' field has been set */
    public boolean hasTargetMerchantName() {
      return fieldSetFlags()[11];
    }

    /** Clears the value of the 'targetMerchantName' field */
    public Builder clearTargetMerchantName() {
      targetMerchantName = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'askId' field */
    public CharSequence getAskId() {
      return askId;
    }

    /** Sets the value of the 'askId' field */
    public Builder setAskId(CharSequence value) {
      validate(fields()[12], value);
      this.askId = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /** Checks whether the 'askId' field has been set */
    public boolean hasAskId() {
      return fieldSetFlags()[12];
    }

    /** Clears the value of the 'askId' field */
    public Builder clearAskId() {
      askId = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'askingUserName' field */
    public CharSequence getAskingUserName() {
      return askingUserName;
    }

    /** Sets the value of the 'askingUserName' field */
    public Builder setAskingUserName(CharSequence value) {
      validate(fields()[13], value);
      this.askingUserName = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /** Checks whether the 'askingUserName' field has been set */
    public boolean hasAskingUserName() {
      return fieldSetFlags()[13];
    }

    /** Clears the value of the 'askingUserName' field */
    public Builder clearAskingUserName() {
      askingUserName = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'endorsements' field */
    public Long getEndorsements() {
      return endorsements;
    }

    /** Sets the value of the 'endorsements' field */
    public Builder setEndorsements(Long value) {
      validate(fields()[14], value);
      this.endorsements = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /** Checks whether the 'endorsements' field has been set */
    public boolean hasEndorsements() {
      return fieldSetFlags()[14];
    }

    /** Clears the value of the 'endorsements' field */
    public Builder clearEndorsements() {
      endorsements = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'giveId' field */
    public CharSequence getGiveId() {
      return giveId;
    }

    /** Sets the value of the 'giveId' field */
    public Builder setGiveId(CharSequence value) {
      validate(fields()[15], value);
      this.giveId = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /** Checks whether the 'giveId' field has been set */
    public boolean hasGiveId() {
      return fieldSetFlags()[15];
    }

    /** Clears the value of the 'giveId' field */
    public Builder clearGiveId() {
      giveId = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'giveText' field */
    public CharSequence getGiveText() {
      return giveText;
    }

    /** Sets the value of the 'giveText' field */
    public Builder setGiveText(CharSequence value) {
      validate(fields()[16], value);
      this.giveText = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /** Checks whether the 'giveText' field has been set */
    public boolean hasGiveText() {
      return fieldSetFlags()[16];
    }

    /** Clears the value of the 'giveText' field */
    public Builder clearGiveText() {
      giveText = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'multimedia' field */
    public java.util.List<MultimediaType> getMultimedia() {
      return multimedia;
    }

    /** Sets the value of the 'multimedia' field */
    public Builder setMultimedia(java.util.List<MultimediaType> value) {
      validate(fields()[17], value);
      this.multimedia = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /** Checks whether the 'multimedia' field has been set */
    public boolean hasMultimedia() {
      return fieldSetFlags()[17];
    }

    /** Clears the value of the 'multimedia' field */
    public Builder clearMultimedia() {
      multimedia = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    @Override
    public Give build() {
      try {
        Give record = new Give();
        record.userId = fieldSetFlags()[0] ? this.userId : (Integer) defaultValue(fields()[0]);
        record.userName = fieldSetFlags()[1] ? this.userName : (CharSequence) defaultValue(fields()[1]);
        record.userPhotoUrl = fieldSetFlags()[2] ? this.userPhotoUrl : (CharSequence) defaultValue(fields()[2]);
        record.merchantId = fieldSetFlags()[3] ? this.merchantId : (Long) defaultValue(fields()[3]);
        record.timestamp = fieldSetFlags()[4] ? this.timestamp : (CharSequence) defaultValue(fields()[4]);
        record.userLat = fieldSetFlags()[5] ? this.userLat : (Double) defaultValue(fields()[5]);
        record.userLng = fieldSetFlags()[6] ? this.userLng : (Double) defaultValue(fields()[6]);
        record.type = fieldSetFlags()[7] ? this.type : (CharSequence) defaultValue(fields()[7]);
        record.attrName = fieldSetFlags()[8] ? this.attrName : (CharSequence) defaultValue(fields()[8]);
        record.attrValue = fieldSetFlags()[9] ? this.attrValue : (CharSequence) defaultValue(fields()[9]);
        record.targetMerchantID = fieldSetFlags()[10] ? this.targetMerchantID : (Long) defaultValue(fields()[10]);
        record.targetMerchantName = fieldSetFlags()[11] ? this.targetMerchantName : (CharSequence) defaultValue(fields()[11]);
        record.askId = fieldSetFlags()[12] ? this.askId : (CharSequence) defaultValue(fields()[12]);
        record.askingUserName = fieldSetFlags()[13] ? this.askingUserName : (CharSequence) defaultValue(fields()[13]);
        record.endorsements = fieldSetFlags()[14] ? this.endorsements : (Long) defaultValue(fields()[14]);
        record.giveId = fieldSetFlags()[15] ? this.giveId : (CharSequence) defaultValue(fields()[15]);
        record.giveText = fieldSetFlags()[16] ? this.giveText : (CharSequence) defaultValue(fields()[16]);
        record.multimedia = fieldSetFlags()[17] ? this.multimedia : (java.util.List<MultimediaType>) defaultValue(fields()[17]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}