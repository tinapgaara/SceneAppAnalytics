/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.AppLogs;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class HeadersType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HeadersType\",\"namespace\":\"avro.avro.AppLogs\",\"fields\":[{\"name\":\"userId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"timestamp\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"appName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"appVersion\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"platformName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"platformVersion\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userLat\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"userLong\",\"type\":[\"null\",\"double\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Long userId;
  @Deprecated public java.lang.Double timestamp;
  @Deprecated public java.lang.CharSequence appName;
  @Deprecated public java.lang.CharSequence appVersion;
  @Deprecated public java.lang.CharSequence platformName;
  @Deprecated public java.lang.CharSequence platformVersion;
  @Deprecated public java.lang.Double userLat;
  @Deprecated public java.lang.Double userLong;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public HeadersType() {}

  /**
   * All-args constructor.
   */
  public HeadersType(java.lang.Long userId, java.lang.Double timestamp, java.lang.CharSequence appName, java.lang.CharSequence appVersion, java.lang.CharSequence platformName, java.lang.CharSequence platformVersion, java.lang.Double userLat, java.lang.Double userLong) {
    this.userId = userId;
    this.timestamp = timestamp;
    this.appName = appName;
    this.appVersion = appVersion;
    this.platformName = platformName;
    this.platformVersion = platformVersion;
    this.userLat = userLat;
    this.userLong = userLong;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return userId;
    case 1: return timestamp;
    case 2: return appName;
    case 3: return appVersion;
    case 4: return platformName;
    case 5: return platformVersion;
    case 6: return userLat;
    case 7: return userLong;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: userId = (java.lang.Long)value$; break;
    case 1: timestamp = (java.lang.Double)value$; break;
    case 2: appName = (java.lang.CharSequence)value$; break;
    case 3: appVersion = (java.lang.CharSequence)value$; break;
    case 4: platformName = (java.lang.CharSequence)value$; break;
    case 5: platformVersion = (java.lang.CharSequence)value$; break;
    case 6: userLat = (java.lang.Double)value$; break;
    case 7: userLong = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'userId' field.
   */
  public java.lang.Long getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.Double getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Double value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'appName' field.
   */
  public java.lang.CharSequence getAppName() {
    return appName;
  }

  /**
   * Sets the value of the 'appName' field.
   * @param value the value to set.
   */
  public void setAppName(java.lang.CharSequence value) {
    this.appName = value;
  }

  /**
   * Gets the value of the 'appVersion' field.
   */
  public java.lang.CharSequence getAppVersion() {
    return appVersion;
  }

  /**
   * Sets the value of the 'appVersion' field.
   * @param value the value to set.
   */
  public void setAppVersion(java.lang.CharSequence value) {
    this.appVersion = value;
  }

  /**
   * Gets the value of the 'platformName' field.
   */
  public java.lang.CharSequence getPlatformName() {
    return platformName;
  }

  /**
   * Sets the value of the 'platformName' field.
   * @param value the value to set.
   */
  public void setPlatformName(java.lang.CharSequence value) {
    this.platformName = value;
  }

  /**
   * Gets the value of the 'platformVersion' field.
   */
  public java.lang.CharSequence getPlatformVersion() {
    return platformVersion;
  }

  /**
   * Sets the value of the 'platformVersion' field.
   * @param value the value to set.
   */
  public void setPlatformVersion(java.lang.CharSequence value) {
    this.platformVersion = value;
  }

  /**
   * Gets the value of the 'userLat' field.
   */
  public java.lang.Double getUserLat() {
    return userLat;
  }

  /**
   * Sets the value of the 'userLat' field.
   * @param value the value to set.
   */
  public void setUserLat(java.lang.Double value) {
    this.userLat = value;
  }

  /**
   * Gets the value of the 'userLong' field.
   */
  public java.lang.Double getUserLong() {
    return userLong;
  }

  /**
   * Sets the value of the 'userLong' field.
   * @param value the value to set.
   */
  public void setUserLong(java.lang.Double value) {
    this.userLong = value;
  }

  /** Creates a new HeadersType RecordBuilder */
  public static avro.AppLogs.HeadersType.Builder newBuilder() {
    return new avro.AppLogs.HeadersType.Builder();
  }
  
  /** Creates a new HeadersType RecordBuilder by copying an existing Builder */
  public static avro.AppLogs.HeadersType.Builder newBuilder(avro.AppLogs.HeadersType.Builder other) {
    return new avro.AppLogs.HeadersType.Builder(other);
  }
  
  /** Creates a new HeadersType RecordBuilder by copying an existing HeadersType instance */
  public static avro.AppLogs.HeadersType.Builder newBuilder(avro.AppLogs.HeadersType other) {
    return new avro.AppLogs.HeadersType.Builder(other);
  }
  
  /**
   * RecordBuilder for HeadersType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HeadersType>
    implements org.apache.avro.data.RecordBuilder<HeadersType> {

    private java.lang.Long userId;
    private java.lang.Double timestamp;
    private java.lang.CharSequence appName;
    private java.lang.CharSequence appVersion;
    private java.lang.CharSequence platformName;
    private java.lang.CharSequence platformVersion;
    private java.lang.Double userLat;
    private java.lang.Double userLong;

    /** Creates a new Builder */
    private Builder() {
      super(avro.AppLogs.HeadersType.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.AppLogs.HeadersType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.appName)) {
        this.appName = data().deepCopy(fields()[2].schema(), other.appName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.appVersion)) {
        this.appVersion = data().deepCopy(fields()[3].schema(), other.appVersion);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.platformName)) {
        this.platformName = data().deepCopy(fields()[4].schema(), other.platformName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.platformVersion)) {
        this.platformVersion = data().deepCopy(fields()[5].schema(), other.platformVersion);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.userLat)) {
        this.userLat = data().deepCopy(fields()[6].schema(), other.userLat);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.userLong)) {
        this.userLong = data().deepCopy(fields()[7].schema(), other.userLong);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing HeadersType instance */
    private Builder(avro.AppLogs.HeadersType other) {
            super(avro.AppLogs.HeadersType.SCHEMA$);
      if (isValidValue(fields()[0], other.userId)) {
        this.userId = data().deepCopy(fields()[0].schema(), other.userId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.appName)) {
        this.appName = data().deepCopy(fields()[2].schema(), other.appName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.appVersion)) {
        this.appVersion = data().deepCopy(fields()[3].schema(), other.appVersion);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.platformName)) {
        this.platformName = data().deepCopy(fields()[4].schema(), other.platformName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.platformVersion)) {
        this.platformVersion = data().deepCopy(fields()[5].schema(), other.platformVersion);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.userLat)) {
        this.userLat = data().deepCopy(fields()[6].schema(), other.userLat);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.userLong)) {
        this.userLong = data().deepCopy(fields()[7].schema(), other.userLong);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'userId' field */
    public java.lang.Long getUserId() {
      return userId;
    }
    
    /** Sets the value of the 'userId' field */
    public avro.AppLogs.HeadersType.Builder setUserId(java.lang.Long value) {
      validate(fields()[0], value);
      this.userId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'userId' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'userId' field */
    public avro.AppLogs.HeadersType.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Double getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public avro.AppLogs.HeadersType.Builder setTimestamp(java.lang.Double value) {
      validate(fields()[1], value);
      this.timestamp = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'timestamp' field */
    public avro.AppLogs.HeadersType.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'appName' field */
    public java.lang.CharSequence getAppName() {
      return appName;
    }
    
    /** Sets the value of the 'appName' field */
    public avro.AppLogs.HeadersType.Builder setAppName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.appName = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'appName' field has been set */
    public boolean hasAppName() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'appName' field */
    public avro.AppLogs.HeadersType.Builder clearAppName() {
      appName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'appVersion' field */
    public java.lang.CharSequence getAppVersion() {
      return appVersion;
    }
    
    /** Sets the value of the 'appVersion' field */
    public avro.AppLogs.HeadersType.Builder setAppVersion(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.appVersion = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'appVersion' field has been set */
    public boolean hasAppVersion() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'appVersion' field */
    public avro.AppLogs.HeadersType.Builder clearAppVersion() {
      appVersion = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'platformName' field */
    public java.lang.CharSequence getPlatformName() {
      return platformName;
    }
    
    /** Sets the value of the 'platformName' field */
    public avro.AppLogs.HeadersType.Builder setPlatformName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.platformName = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'platformName' field has been set */
    public boolean hasPlatformName() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'platformName' field */
    public avro.AppLogs.HeadersType.Builder clearPlatformName() {
      platformName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'platformVersion' field */
    public java.lang.CharSequence getPlatformVersion() {
      return platformVersion;
    }
    
    /** Sets the value of the 'platformVersion' field */
    public avro.AppLogs.HeadersType.Builder setPlatformVersion(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.platformVersion = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'platformVersion' field has been set */
    public boolean hasPlatformVersion() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'platformVersion' field */
    public avro.AppLogs.HeadersType.Builder clearPlatformVersion() {
      platformVersion = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'userLat' field */
    public java.lang.Double getUserLat() {
      return userLat;
    }
    
    /** Sets the value of the 'userLat' field */
    public avro.AppLogs.HeadersType.Builder setUserLat(java.lang.Double value) {
      validate(fields()[6], value);
      this.userLat = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'userLat' field has been set */
    public boolean hasUserLat() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'userLat' field */
    public avro.AppLogs.HeadersType.Builder clearUserLat() {
      userLat = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'userLong' field */
    public java.lang.Double getUserLong() {
      return userLong;
    }
    
    /** Sets the value of the 'userLong' field */
    public avro.AppLogs.HeadersType.Builder setUserLong(java.lang.Double value) {
      validate(fields()[7], value);
      this.userLong = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'userLong' field has been set */
    public boolean hasUserLong() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'userLong' field */
    public avro.AppLogs.HeadersType.Builder clearUserLong() {
      userLong = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public HeadersType build() {
      try {
        HeadersType record = new HeadersType();
        record.userId = fieldSetFlags()[0] ? this.userId : (java.lang.Long) defaultValue(fields()[0]);
        record.timestamp = fieldSetFlags()[1] ? this.timestamp : (java.lang.Double) defaultValue(fields()[1]);
        record.appName = fieldSetFlags()[2] ? this.appName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.appVersion = fieldSetFlags()[3] ? this.appVersion : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.platformName = fieldSetFlags()[4] ? this.platformName : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.platformVersion = fieldSetFlags()[5] ? this.platformVersion : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.userLat = fieldSetFlags()[6] ? this.userLat : (java.lang.Double) defaultValue(fields()[6]);
        record.userLong = fieldSetFlags()[7] ? this.userLong : (java.lang.Double) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
