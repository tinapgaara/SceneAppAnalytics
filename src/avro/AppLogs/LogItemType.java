/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.AppLogs;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LogItemType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LogItemType\",\"namespace\":\"avro.avro.AppLogs\",\"fields\":[{\"name\":\"headers\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"HeadersType\",\"fields\":[{\"name\":\"userId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"timestamp\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"appName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"appVersion\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"platformName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"platformVersion\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"userLat\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"userLong\",\"type\":[\"null\",\"double\"],\"default\":null}]}],\"default\":null},{\"name\":\"actions\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ActionsType\",\"fields\":[{\"name\":\"action\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"id\",\"type\":[\"null\",\"string\"],\"default\":null}]}],\"default\":null},{\"name\":\"context\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ContextType\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null}]},\"default\":[]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public avro.AppLogs.HeadersType headers;
  @Deprecated public avro.AppLogs.ActionsType actions;
  @Deprecated public java.util.List<avro.AppLogs.ContextType> context;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public LogItemType() {}

  /**
   * All-args constructor.
   */
  public LogItemType(avro.AppLogs.HeadersType headers, avro.AppLogs.ActionsType actions, java.util.List<avro.AppLogs.ContextType> context) {
    this.headers = headers;
    this.actions = actions;
    this.context = context;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return headers;
    case 1: return actions;
    case 2: return context;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: headers = (avro.AppLogs.HeadersType)value$; break;
    case 1: actions = (avro.AppLogs.ActionsType)value$; break;
    case 2: context = (java.util.List<avro.AppLogs.ContextType>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'headers' field.
   */
  public avro.AppLogs.HeadersType getHeaders() {
    return headers;
  }

  /**
   * Sets the value of the 'headers' field.
   * @param value the value to set.
   */
  public void setHeaders(avro.AppLogs.HeadersType value) {
    this.headers = value;
  }

  /**
   * Gets the value of the 'actions' field.
   */
  public avro.AppLogs.ActionsType getActions() {
    return actions;
  }

  /**
   * Sets the value of the 'actions' field.
   * @param value the value to set.
   */
  public void setActions(avro.AppLogs.ActionsType value) {
    this.actions = value;
  }

  /**
   * Gets the value of the 'context' field.
   */
  public java.util.List<avro.AppLogs.ContextType> getContext() {
    return context;
  }

  /**
   * Sets the value of the 'context' field.
   * @param value the value to set.
   */
  public void setContext(java.util.List<avro.AppLogs.ContextType> value) {
    this.context = value;
  }

  /** Creates a new LogItemType RecordBuilder */
  public static avro.AppLogs.LogItemType.Builder newBuilder() {
    return new avro.AppLogs.LogItemType.Builder();
  }
  
  /** Creates a new LogItemType RecordBuilder by copying an existing Builder */
  public static avro.AppLogs.LogItemType.Builder newBuilder(avro.AppLogs.LogItemType.Builder other) {
    return new avro.AppLogs.LogItemType.Builder(other);
  }
  
  /** Creates a new LogItemType RecordBuilder by copying an existing LogItemType instance */
  public static avro.AppLogs.LogItemType.Builder newBuilder(avro.AppLogs.LogItemType other) {
    return new avro.AppLogs.LogItemType.Builder(other);
  }
  
  /**
   * RecordBuilder for LogItemType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LogItemType>
    implements org.apache.avro.data.RecordBuilder<LogItemType> {

    private avro.AppLogs.HeadersType headers;
    private avro.AppLogs.ActionsType actions;
    private java.util.List<avro.AppLogs.ContextType> context;

    /** Creates a new Builder */
    private Builder() {
      super(avro.AppLogs.LogItemType.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.AppLogs.LogItemType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.headers)) {
        this.headers = data().deepCopy(fields()[0].schema(), other.headers);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.actions)) {
        this.actions = data().deepCopy(fields()[1].schema(), other.actions);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.context)) {
        this.context = data().deepCopy(fields()[2].schema(), other.context);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing LogItemType instance */
    private Builder(avro.AppLogs.LogItemType other) {
            super(avro.AppLogs.LogItemType.SCHEMA$);
      if (isValidValue(fields()[0], other.headers)) {
        this.headers = data().deepCopy(fields()[0].schema(), other.headers);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.actions)) {
        this.actions = data().deepCopy(fields()[1].schema(), other.actions);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.context)) {
        this.context = data().deepCopy(fields()[2].schema(), other.context);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'headers' field */
    public avro.AppLogs.HeadersType getHeaders() {
      return headers;
    }
    
    /** Sets the value of the 'headers' field */
    public avro.AppLogs.LogItemType.Builder setHeaders(avro.AppLogs.HeadersType value) {
      validate(fields()[0], value);
      this.headers = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'headers' field has been set */
    public boolean hasHeaders() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'headers' field */
    public avro.AppLogs.LogItemType.Builder clearHeaders() {
      headers = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'actions' field */
    public avro.AppLogs.ActionsType getActions() {
      return actions;
    }
    
    /** Sets the value of the 'actions' field */
    public avro.AppLogs.LogItemType.Builder setActions(avro.AppLogs.ActionsType value) {
      validate(fields()[1], value);
      this.actions = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'actions' field has been set */
    public boolean hasActions() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'actions' field */
    public avro.AppLogs.LogItemType.Builder clearActions() {
      actions = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'context' field */
    public java.util.List<avro.AppLogs.ContextType> getContext() {
      return context;
    }
    
    /** Sets the value of the 'context' field */
    public avro.AppLogs.LogItemType.Builder setContext(java.util.List<avro.AppLogs.ContextType> value) {
      validate(fields()[2], value);
      this.context = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'context' field has been set */
    public boolean hasContext() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'context' field */
    public avro.AppLogs.LogItemType.Builder clearContext() {
      context = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public LogItemType build() {
      try {
        LogItemType record = new LogItemType();
        record.headers = fieldSetFlags()[0] ? this.headers : (avro.AppLogs.HeadersType) defaultValue(fields()[0]);
        record.actions = fieldSetFlags()[1] ? this.actions : (avro.AppLogs.ActionsType) defaultValue(fields()[1]);
        record.context = fieldSetFlags()[2] ? this.context : (java.util.List<avro.AppLogs.ContextType>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
